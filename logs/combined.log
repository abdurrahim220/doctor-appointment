2025-09-05 17:07:27 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:07:27 +0000] "GET /api/v1/user HTTP/1.1" 200 227 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:07:33 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:07:33 +0000] "GET /api/v1/user HTTP/1.1" 200 250 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:19 [[32minfo[39m]: Server is running 🚀
2025-09-05 17:10:19 [[32minfo[39m]: Uptime: 28.3052714
2025-09-05 17:10:19 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:19 +0000] "GET / HTTP/1.1" 200 56 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:30 [[32minfo[39m]: Server is running 🚀
2025-09-05 17:10:30 [[32minfo[39m]: Uptime: 39.0925059
2025-09-05 17:10:30 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:30 +0000] "GET / HTTP/1.1" 200 56 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:36 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:36 +0000] "GET /adsf HTTP/1.1" 404 135 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:38 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:38 +0000] "GET /adsf HTTP/1.1" 404 135 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:46 [[32minfo[39m]: Server is running 🚀
2025-09-05 17:10:46 [[32minfo[39m]: Uptime: 54.8132726
2025-09-05 17:10:46 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:46 +0000] "GET / HTTP/1.1" 200 56 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:48 [[32minfo[39m]: Server is running 🚀
2025-09-05 17:10:48 [[32minfo[39m]: Uptime: 56.9070785
2025-09-05 17:10:48 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:48 +0000] "GET / HTTP/1.1" 200 56 "-" "PostmanRuntime/7.45.0"
2025-09-05 17:10:54 [[32mhttp[39m]: ::1 - - [05/Sep/2025:11:10:54 +0000] "POST /api/v1/user HTTP/1.1" 400 - "-" "PostmanRuntime/7.45.0"
2025-09-06 11:33:29 [[32minfo[39m]: Redis connected
2025-09-06 18:19:34 [[32minfo[39m]: 🌱 Admin user and post created successfully!
2025-09-06 18:32:57 [[32minfo[39m]: 🌱 Admin user and post created successfully!
2025-09-06 12:42:23 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:42:27 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:42:32 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:42:37 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:42:45 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:42:55 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:43:12 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:43:41 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:44:36 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:45:41 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:46:46 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `client_1.default.user.upsert()` invocation in
/app/dist/prisma/seed.js:10:33

   7 const logger_1 = __importDefault(require("../utils/logger"));
   8 const client_1 = __importDefault(require("./client"));
   9 async function main() {
→ 10     await client_1.default.user.upsert(
The table `public.User` does not exist in the current database.
    at ei.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/app/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/app/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async main (/app/dist/prisma/seed.js:10:5)
2025-09-06 12:47:50 [[32minfo[39m]: 🌱 Admin user and post created successfully!
2025-09-06 12:47:52 [[32minfo[39m]: Redis connected
2025-09-07 00:48:22 [[32minfo[39m]: 🌱 Admin user and post created successfully!
2025-09-07 00:48:24 [[32minfo[39m]: Redis connected
2025-09-07 00:52:57 [[32minfo[39m]: 🌱 Admin user and post created successfully!
2025-09-07 00:52:59 [[32minfo[39m]: Redis connected
2025-09-07 14:47:08 [[32minfo[39m]: 🌱 Starting seeding process...
2025-09-07 14:47:08 [[32minfo[39m]: 🌱 User admin@example.com seeded successfully!
2025-09-07 14:47:08 [[32minfo[39m]: 🌱 User doctor@example.com seeded successfully!
2025-09-07 14:47:08 [[32minfo[39m]: 🌱 User patient@example.com seeded successfully!
2025-09-07 14:47:08 [[32minfo[39m]: 🌱 User nurse@example.com seeded successfully!
2025-09-07 14:49:41 [[32minfo[39m]: 🌱 Starting seeding process...
2025-09-07 14:49:41 [[32minfo[39m]: 🌱 User admin@example.com seeded successfully!
2025-09-07 14:49:41 [[32minfo[39m]: 🌱 User doctor@example.com seeded successfully!
2025-09-07 14:49:41 [[32minfo[39m]: 🌱 User patient@example.com seeded successfully!
2025-09-07 14:49:41 [[32minfo[39m]: 🌱 User nurse@example.com seeded successfully!
2025-09-07 14:59:42 [[32minfo[39m]: 🌱 Starting seeding process...
2025-09-07 14:59:42 [[32minfo[39m]: 🌱 User admin@example.com seeded successfully!
2025-09-07 14:59:42 [[32minfo[39m]: 🌱 User doctor@example.com seeded successfully!
2025-09-07 14:59:42 [[32minfo[39m]: 🌱 User patient@example.com seeded successfully!
2025-09-07 14:59:42 [[32minfo[39m]: 🌱 User nurse@example.com seeded successfully!
2025-09-07 14:59:42 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `prisma.patientProfile.upsert()` invocation in
C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\src\prisma\seed.ts:21:33

  18 // profiles seeds 
  19 // patient profiles
  20 for (const profile of patientProfiles) {
→ 21   await prisma.patientProfile.upsert(
Foreign key constraint violated on the constraint: `PatientProfile_userId_fkey`
    at ei.handleRequestError (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:174:12)
    at ei.request (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:143:12)
    at async a (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\getPrismaClient.ts:833:24)
    at async main (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\src\prisma\seed.ts:21:5)
2025-09-07 15:00:16 [[32minfo[39m]: 🌱 Starting seeding process...
2025-09-07 15:00:16 [[32minfo[39m]: 🌱 User admin@example.com seeded successfully!
2025-09-07 15:00:16 [[32minfo[39m]: 🌱 User doctor@example.com seeded successfully!
2025-09-07 15:00:16 [[32minfo[39m]: 🌱 User patient@example.com seeded successfully!
2025-09-07 15:00:16 [[32minfo[39m]: 🌱 User nurse@example.com seeded successfully!
2025-09-07 15:00:16 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `prisma.patientProfile.upsert()` invocation in
C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\src\prisma\seed.ts:21:33

  18 // profiles seeds 
  19 // patient profiles
  20 for (const profile of patientProfiles) {
→ 21   await prisma.patientProfile.upsert(
Foreign key constraint violated on the constraint: `PatientProfile_userId_fkey`
    at ei.handleRequestError (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:174:12)
    at ei.request (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:143:12)
    at async a (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\getPrismaClient.ts:833:24)
    at async main (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\src\prisma\seed.ts:21:5)
2025-09-07 15:05:51 [[32minfo[39m]: 🌱 Starting seeding process...
2025-09-07 15:05:51 [[32minfo[39m]: 🌱 User admin@example.com seeded successfully!
2025-09-07 15:05:51 [[32minfo[39m]: 🌱 User doctor@example.com seeded successfully!
2025-09-07 15:05:51 [[32minfo[39m]: 🌱 User patient@example.com seeded successfully!
2025-09-07 15:05:51 [[32minfo[39m]: 🌱 User nurse@example.com seeded successfully!
2025-09-07 15:06:31 [[32minfo[39m]: 🌱 Starting seeding process...
2025-09-07 15:06:31 [[32minfo[39m]: 🌱 User admin@example.com seeded successfully!
2025-09-07 15:06:31 [[32minfo[39m]: 🌱 User doctor@example.com seeded successfully!
2025-09-07 15:06:31 [[32minfo[39m]: 🌱 User patient@example.com seeded successfully!
2025-09-07 15:06:31 [[32minfo[39m]: 🌱 User nurse@example.com seeded successfully!
2025-09-07 15:06:31 [[31merror[39m]: PrismaClientKnownRequestError: 
Invalid `prisma.patientProfile.upsert()` invocation in
C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\src\prisma\seed.ts:21:33

  18 // profiles seeds
  19 // patient profiles
  20 for (const profile of patientProfiles) {
→ 21   await prisma.patientProfile.upsert(
The change you are trying to make would violate the required relation 'PatientProfileToUser' between the `PatientProfile` and `User` models.
    at ei.handleRequestError (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:228:13)
    at ei.handleAndLogRequestError (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:174:12)
    at ei.request (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\RequestHandler.ts:143:12)
    at async a (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\node_modules\@prisma\client\src\runtime\getPrismaClient.ts:833:24)
    at async main (C:\Users\masuma\Desktop\APP\Projects\unfinished projects\sql_learning\prisma_tutorial\src\prisma\seed.ts:21:5)
2025-09-07 15:21:03 [[32minfo[39m]: 🌱 Starting seed process...
2025-09-07 15:21:03 [[32minfo[39m]: 🧹 Cleaned up existing data
2025-09-07 15:21:03 [[32minfo[39m]: 👥 Created 4 users
2025-09-07 15:21:03 [[32minfo[39m]: 👤 Created 1 patient profiles
2025-09-07 15:21:03 [[32minfo[39m]: 👨‍⚕️ Created 1 doctor profiles
2025-09-07 15:21:03 [[32minfo[39m]: 👩‍⚕️ Created 1 nurse profiles
2025-09-07 15:21:03 [[32minfo[39m]: 🏥 Created 1 clinics
2025-09-07 15:21:03 [[32minfo[39m]: 🔗 Created 1 clinic doctor relationships
2025-09-07 15:21:03 [[32minfo[39m]: 📅 Created 2 schedules
2025-09-07 15:21:03 [[32minfo[39m]: 📋 Created 1 appointments
2025-09-07 15:21:03 [[32minfo[39m]: 📋 Created 1 medical records
2025-09-07 15:21:03 [[32minfo[39m]: ⭐ Created 1 reviews
2025-09-07 15:21:03 [[32minfo[39m]: 🌱 Seed completed successfully!
